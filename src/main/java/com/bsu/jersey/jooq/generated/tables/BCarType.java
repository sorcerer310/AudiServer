/**
 * This class is generated by jOOQ
 */
package com.bsu.jersey.jooq.generated.tables;


import com.bsu.jersey.jooq.generated.Carshop;
import com.bsu.jersey.jooq.generated.Keys;
import com.bsu.jersey.jooq.generated.tables.records.BCarTypeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BCarType extends TableImpl<BCarTypeRecord> {

    private static final long serialVersionUID = 1286215374;

    /**
     * The reference instance of <code>carshop.b_car_type</code>
     */
    public static final BCarType B_CAR_TYPE = new BCarType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BCarTypeRecord> getRecordType() {
        return BCarTypeRecord.class;
    }

    /**
     * The column <code>carshop.b_car_type.id</code>.
     */
    public final TableField<BCarTypeRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>carshop.b_car_type.brand</code>. 车的品牌
     */
    public final TableField<BCarTypeRecord, String> BRAND = createField("brand", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "车的品牌");

    /**
     * The column <code>carshop.b_car_type.brand_type</code>. 品牌类型,例如 奥迪、奥迪(进口)
     */
    public final TableField<BCarTypeRecord, String> BRAND_TYPE = createField("brand_type", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "品牌类型,例如 奥迪、奥迪(进口)");

    /**
     * The column <code>carshop.b_car_type.car_models</code>. 车辆的具体型号
     */
    public final TableField<BCarTypeRecord, String> CAR_MODELS = createField("car_models", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "车辆的具体型号");

    /**
     * The column <code>carshop.b_car_type.product_name</code>. 产品名称
     */
    public final TableField<BCarTypeRecord, String> PRODUCT_NAME = createField("product_name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "产品名称");

    /**
     * The column <code>carshop.b_car_type.year</code>. 汽车生产年份
     */
    public final TableField<BCarTypeRecord, String> YEAR = createField("year", org.jooq.impl.SQLDataType.VARCHAR.length(4), this, "汽车生产年份");

    /**
     * The column <code>carshop.b_car_type.service_car_models_id</code>. 当前销售车型product_name对应的保养车型的id
     */
    public final TableField<BCarTypeRecord, UInteger> SERVICE_CAR_MODELS_ID = createField("service_car_models_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "当前销售车型product_name对应的保养车型的id");

    /**
     * Create a <code>carshop.b_car_type</code> table reference
     */
    public BCarType() {
        this("b_car_type", null);
    }

    /**
     * Create an aliased <code>carshop.b_car_type</code> table reference
     */
    public BCarType(String alias) {
        this(alias, B_CAR_TYPE);
    }

    private BCarType(String alias, Table<BCarTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private BCarType(String alias, Table<BCarTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Carshop.CARSHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BCarTypeRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_B_CAR_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BCarTypeRecord> getPrimaryKey() {
        return Keys.KEY_B_CAR_TYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BCarTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<BCarTypeRecord>>asList(Keys.KEY_B_CAR_TYPE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BCarType as(String alias) {
        return new BCarType(alias, this);
    }

    /**
     * Rename this table
     */
    public BCarType rename(String name) {
        return new BCarType(name, null);
    }
}
